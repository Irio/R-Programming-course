install.packages("slidify")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
search()
install.packages("KernSmooth")
library(KernSmooth)
x + y
}
add2(1, 4)
add2 <- function(x, y) {
add2(1, 4)
}
}
add2 <- function(x, y) {
x + y
}
add2(1, 4)
above10 <- function(x) {
use <- x > 10
x[use]
}
above10([1, 4, 5, 7, 8, 14, 12, 2, 90])
above10(list([1, 4, 5, 7, 8, 14, 12, 2, 90]))
above10(1:15)
airquality
mean
args(paste)
environment()
cube <- function(x, n) {
x^3
}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
}
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
read.csv("200.csv")
getwd()
setwd("/Users/irio/Downloads")
getwd()
read.csv("200.csv")
setwd("/Users/irio/Downloads/specdata")
read.csv("200.csv")
data200 <- read.csv("200.csv")
data200 <- read.csv("200.csv")
setwd("~/Code/r_programming/assignment_1/specdata")
data200 <- read.csv("200.csv")
data200 <- read.csv("200.csv")
data200[1]
data200[1,]
data200 <- read.csv("200.csv")
getwd()
directory <- "~/Code/r_programming/assignment_1/specdata/200.csv"
mean(c(1, 2, 3))
mean(c(1, 2, 3, 4))
data <- read.csv(directory)
given_pollutant <- data[, pollutant]
pollutant <- "sulfate"
given_pollutant <- data[, pollutant]
given_pollutant[!is.na(given_pollutant)]
mean(given_pollutant[!is.na(given_pollutant)])
class(1:10)
class("1:10")
as.integer("1:10")
as.numeric("1:10")
is.numeric("1:10")
is.vector("1:10")
a.vector("1:10")
as.vector("1:10")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor_id in id) {
data <- read.csv(directory)
given_pollutant <- data[, pollutant]
mean(given_pollutant[!is.na(given_pollutant)])
}
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
setwd(directory)
for (monitor_id in id) {
data <- read.csv(monitor_id)
given_pollutant <- data[, pollutant]
mean(given_pollutant[!is.na(given_pollutant)])
}
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
setwd(directory)
for (monitor_id in id) {
data <- read.csv("specdata/200.csv")
given_pollutant <- data[, pollutant]
mean(given_pollutant[!is.na(given_pollutant)])
}
}
pollutantmean("specdata", "sulfate", 1:10)
for (monitor_id in id) {
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (monitor_id in id) {
data <- read.csv("specdata/200.csv")
given_pollutant <- data[, pollutant]
mean(given_pollutant[!is.na(given_pollutant)])
}
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
#for (monitor_id in id) {
data <- read.csv("specdata/200.csv")
given_pollutant <- data[, pollutant]
mean(given_pollutant[!is.na(given_pollutant)])
#}
}
pollutantmean("specdata", "sulfate", 1:10)
